<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/j2ee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	
	<display-name>channel-serve-rest</display-name>
	
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.jpg</url-pattern>
	    <url-pattern>*.gif</url-pattern>
	    <url-pattern>*.png</url-pattern>
	    <url-pattern>*.jpeg</url-pattern>
	    <url-pattern>*.JPG</url-pattern>
	    <url-pattern>*.GIF</url-pattern>
	    <url-pattern>*.PNG</url-pattern>
	    <url-pattern>*.JPEG</url-pattern>
	    <url-pattern>*.js</url-pattern>
	    <url-pattern>*.css</url-pattern>
	    <url-pattern>*.eot</url-pattern>
	    <url-pattern>*.svg</url-pattern>
	    <url-pattern>*.ttf</url-pattern>
	    <url-pattern>*.woff</url-pattern>
	</servlet-mapping>
	
	<!-- ======================== 单点登录start ======================== -->
	<filter>
        <filter-name>accessControlFilter</filter-name>
        <filter-class>com.tydic.web.filter.AccessControlFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>accessControlFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<context-param>
	    <param-name>configurationStrategy</param-name>
	    <param-value>PROPERTY_FILE</param-value>
	</context-param>
	<context-param>
	    <param-name>configFileLocation</param-name>
	    <!-- <param-value>disconf/download/sso.properties</param-value>   -->
	    <param-value>channelServeRest_conf/sso.properties</param-value>
	</context-param>
	<!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置 -->
    <listener>
        <listener-class>
			org.jasig.cas.client.session.SingleSignOutHttpSessionListener
		</listener-class>
    </listener>

    <!-- 该过滤器用于实现单点登出功能，可选配置。 -->
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 该过滤器负责用户的认证工作，必须启用它 -->
    <filter>
        <filter-name>CASFilter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CASFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>
            org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 该过滤器负责实现HttpServletRequest请求的包裹， 比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。 -->
    <filter>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>
            org.jasig.cas.client.util.HttpServletRequestWrapperFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 该过滤器负责把ticket验证后产生的Assertion放入ThreadLocal中，以便 不能访问web层的资源使用。该过滤器可以使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。比如AssertionHolder.getAssertion().getPrincipal().getName()。 -->
    <filter>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- ======================== 单点登录end ======================== -->
	
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/applicationContext*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<filter>
	    <filter-name>CharacterEncoding</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
	    </init-param>
	    <init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
	    </init-param>
	    <async-supported>true</async-supported>
	</filter>
	
	<filter-mapping>
	    <filter-name>CharacterEncoding</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>XssFilter</filter-name>
	    <filter-class>com.tydic.web.filter.XssFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>XssFilter</filter-name>
		<url-pattern>/*</url-pattern>	    
	</filter-mapping>
	
	<!-- start - 登陆信息-集成2.0配置 -->
	<!-- <servlet>
	    <servlet-name>InitServlet</servlet-name>
	    <servlet-class>
				com.tydic.sso.client.InitServlet
			</servlet-class>
		<init-param>
	      <param-name>sso.client.config.path</param-name>
	      <param-value>classpath:/channel.sys.config.xml</param-value>
	    </init-param>	
	    <load-on-startup>1</load-on-startup>
	</servlet>	
	
	<servlet>
		<servlet-name>LogOutServlet</servlet-name>
		<servlet-class>com.tydic.sso.client.LogOutServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>LogOutServlet</servlet-name>
		<url-pattern>/sso/LogoutServlet</url-pattern>
	</servlet-mapping>
	
	<filter>
		<filter-name>AuthFilter</filter-name>
		<filter-class>com.tydic.sso.AuthFilter</filter-class>
		<init-param>
		  <param-name>sso.client.config.path</param-name>
		  <param-value>classpath:/channel.sys.config.xml</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>AuthFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>AuthFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>AuthFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	 -->
	<!-- end - 登陆信息-集成2.0配置 -->
	
	
</web-app>